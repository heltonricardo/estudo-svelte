{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Basic/ContactCard.svelte","../../src/Basic/Basic.svelte","../../src/ComponentEvents/Modal.svelte","../../src/ComponentEvents/Product.svelte","../../src/ComponentEvents/ComponentEvents.svelte","../../src/BindingsAndForms/CustomInput.svelte","../../src/BindingsAndForms/Toggle.svelte","../../src/BindingsAndForms/validation.js","../../src/BindingsAndForms/BindingsAndForms.svelte","../../src/DataStore/UI/Button.svelte","../../node_modules/svelte/store/index.mjs","../../src/DataStore/Cart/cart-store.js","../../src/DataStore/Products/product-store.js","../../src/DataStore/Cart/CartItem.svelte","../../src/DataStore/Cart/Cart.svelte","../../src/DataStore/Products/Product.svelte","../../src/DataStore/Products/Products.svelte","../../src/DataStore/UI/timer.js","../../src/DataStore/DataStore.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/motion/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/animate/index.mjs","../../src/Animations/Spring.svelte","../../src/Animations/Animations.svelte","../../src/HTTP/store.js","../../src/HTTP/Http.svelte","../../src/SpecialElements/DynamicComponent/Product.svelte","../../src/SpecialElements/DynamicComponent/CartItem.svelte","../../src/SpecialElements/RecursiveComponent/FamilyNode.svelte","../../src/SpecialElements/SpecialElements.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let userName;\n  export let jobTitle;\n  export let description;\n  export let userImage;\n</script>\n\n<div class=\"contact-card\">\n  <header>\n    <div class=\"thumb\" class:thumb-placeholder={!userImage}>\n      <img src={userImage} alt={userName} />\n    </div>\n    <div class=\"user-data\">\n      <h1>{userName}</h1>\n      <h2>{jobTitle}</h2>\n    </div>\n  </header>\n  <div class=\"description\">\n    <p>{description}</p>\n  </div>\n</div>\n\n<style>\n  .contact-card {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n    max-width: 30rem;\n    border-radius: 5px;\n    margin: 1rem 0;\n    background: white;\n  }\n\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 7rem;\n  }\n\n  .thumb {\n    width: 33%;\n    height: 100%;\n  }\n\n  .thumb-placeholder {\n    background: #ccc;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .user-data {\n    width: 67%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-left: 1rem;\n  }\n\n  h1 {\n    font-size: 1.25rem;\n    font-family: \"Roboto Slab\", sans-serif;\n    margin: 0.5rem 0;\n  }\n\n  h2 {\n    font-size: 1rem;\n    font-weight: normal;\n    color: #5a5a5a;\n    margin: 0;\n    margin-bottom: 0.5rem;\n  }\n\n  .description {\n    border-top: 1px solid #ccc;\n    padding: 1rem;\n  }\n</style>\n","<script>\r\n  import ContactCard from \"./ContactCard.svelte\";\r\n\r\n  let name = \"\";\r\n  let title = \"\";\r\n  let image = \"\";\r\n  let description = \"\";\r\n  let formState = \"empty\";\r\n\r\n  let createdContacts = [];\r\n\r\n  function addContact() {\r\n    if (\r\n      name.trim().length == 0 ||\r\n      title.trim().length == 0 ||\r\n      image.trim().length == 0 ||\r\n      description.trim().length == 0\r\n    ) {\r\n      formState = \"invalid\";\r\n      return;\r\n    }\r\n\r\n    // Anotação 01\r\n    createdContacts = [\r\n      ...createdContacts,\r\n      {\r\n        id: Math.random(),\r\n        name,\r\n        jobTitle: title,\r\n        imageURL: image,\r\n        desc: description,\r\n      },\r\n    ];\r\n\r\n    formState = \"done\";\r\n  }\r\n\r\n  function deleteFirst() {\r\n    createdContacts = createdContacts.slice(1);\r\n  }\r\n\r\n  function deleteLast() {\r\n    createdContacts = createdContacts.slice(0, -1);\r\n  }\r\n</script>\r\n\r\n<form id=\"form\">\r\n  <div class=\"form-control\">\r\n    <label for=\"userName\">User Name</label>\r\n    <input type=\"text\" bind:value={name} id=\"userName\" />\r\n  </div>\r\n  <div class=\"form-control\">\r\n    <label for=\"jobTitle\">Job Title</label>\r\n    <input type=\"text\" bind:value={title} id=\"jobTitle\" />\r\n  </div>\r\n  <div class=\"form-control\">\r\n    <label for=\"image\">Image URL</label>\r\n    <input type=\"text\" bind:value={image} id=\"image\" />\r\n  </div>\r\n  <div class=\"form-control\">\r\n    <label for=\"desc\">Description</label>\r\n    <textarea rows=\"3\" bind:value={description} id=\"desc\" />\r\n  </div>\r\n  <!-- Anotação 02 -->\r\n  <button on:click|preventDefault={addContact}>Add Contact Card</button>\r\n</form>\r\n\r\n<button on:click={deleteFirst}>Delete first</button>\r\n<button on:click={deleteLast}>Delete last</button>\r\n\r\n{#if formState === \"invalid\"}\r\n  <p>Invalid input.</p>\r\n{:else}\r\n  <p>Please enter some data and hit the button!</p>\r\n{/if}\r\n\r\n<!-- Anotação 03 -->\r\n{#each createdContacts as contact, i (contact.id)}\r\n  <h2># {i + 1}</h2>\r\n  <ContactCard\r\n    userName={contact.name}\r\n    jobTitle={contact.jobTitle}\r\n    description={contact.desc}\r\n    userImage={contact.imageURL}\r\n  />\r\n{:else}\r\n  <p>Please start adding some contacts, we found none!</p>\r\n{/each}\r\n\r\n<!--\r\n  Anotação 01\r\n  Para que seja possível renderizar os componentes de arrays em tempo real, é\r\n  necessário fazer a reatribuição desses componentes, e não usar funções prontas\r\n  do JS, como o push, por exemplo. Nesse caso usamos o spread operator (os três\r\n  pontos) para atribuir \"tudo o que já tem dentro do objeto\" + o novo conteúdo.\r\n\r\n  Anotação 02\r\n  É possível usar modificadores após o pipe. Seguem os mais conhecidos:\r\n  - preventDefault: impede o comportamento padrão do browser. Um botão no form\r\n  recarrega a página por padrão, por exemplo;\r\n  - stopPropagation: impede que o evento \"suba\" para o elemento pai na lista\r\n  hierárquica de elementos;\r\n  - once: permite que o evento aconteça somente uma vez.\r\n\r\n  Anotação 03\r\n  Para que não haja problemas na renderização de componentes de arrays, é\r\n  altamente recomendado criarmos uma chave única para para elemento. Nesse caso,\r\n  para fins didáticos, usamos um número aleatório, mas deve-se sempre usar um\r\n  valor diferente para cada um dos elementos. A chave única vai entre parênteses\r\n  sempre no fim da instrução de iteração.\r\n-->\r\n\r\n<style>\r\n  #form {\r\n    width: 30rem;\r\n    max-width: 100%;\r\n    margin: 1rem 0;\r\n  }\r\n</style>","<script>\r\n  import {\r\n    createEventDispatcher,\r\n    onMount,\r\n    onDestroy,\r\n    beforeUpdate,\r\n    afterUpdate,\r\n  } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let agreed = false;\r\n  let autoscroll = false;\r\n\r\n  // Anotação 01 -----------------\r\n  onMount(() => {\r\n    console.log(\"onMount!\");\r\n  });\r\n\r\n  onDestroy(() => {\r\n    console.log(\"onDestroy!\");\r\n  });\r\n\r\n  console.log(\"Script executed!\");\r\n  // -----------------------------\r\n\r\n  // Anotação 02 ------------------------------------\r\n  beforeUpdate(() => {\r\n    console.log(\"beforeUpdate!\");\r\n    autoscroll = agreed;\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    console.log(\"afterUpdate!\");\r\n\r\n    if (autoscroll) {\r\n      const modal = document.querySelector(\".modal\");\r\n      modal.scrollTo(0, modal.scrollHeight);\r\n    }\r\n  });\r\n  // ------------------------------------------------\r\n</script>\r\n\r\n<style>\r\n  .backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: rgba(0, 0, 0, 0.75);\r\n    z-index: 10;\r\n  }\r\n\r\n  .modal {\r\n    padding: 1rem;\r\n    position: fixed;\r\n    top: 10vh;\r\n    left: 10%;\r\n    width: 80%;\r\n    max-height: 15vh;\r\n    background: white;\r\n    border-radius: 5px;\r\n    z-index: 100;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    overflow: scroll;\r\n  }\r\n\r\n  header {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n</style>\r\n\r\n<div class=\"backdrop\" on:click={() => dispatch(\"cancel\")} />\r\n\r\n<div class=\"modal\">\r\n  <header>\r\n    <!-- Anotação 03 -->\r\n    <slot name=\"header\" />\r\n  </header>\r\n\r\n  <div class=\"content\">\r\n    <slot />\r\n  </div>\r\n\r\n  <div class=\"disclaimer\">\r\n    <p>Before you close, you need to agree to our terms!</p>\r\n    <button on:click={() => (agreed = true)}>Agree</button>\r\n  </div>\r\n  <footer>\r\n    <slot name=\"footer\" didAgree={agreed}>\r\n      <button on:click={() => dispatch(\"close\")} disabled={!agreed}\r\n        >Close</button\r\n      >\r\n    </slot>\r\n  </footer>\r\n</div>\r\n\r\n<!--\r\n  Anotação 01\r\n  Essa é uma demonstração do ciclo de vida de um componente:\r\n  Declaração -> Montagem -> Destruição. O primeiro log no console que vemos no\r\n  browser, ao abrir o Modal, é o \"Script executed!\", quando ocorre a declaração\r\n  de tudo o que está dentro das tags <script>. Depois, quando ele está sendo\r\n  montado no DOM/tela , executa a função onMont. Esse é um bom local para\r\n  requisitarmos dados de um servidor, por exemplo. E, ao ser destruído, o Svelte\r\n  executará a função onDestroy do componente. A ordem de declaração das funções\r\n  dentro de <script> é indiferente.\r\n\r\n  Anotação 02\r\n  Esse seria um segundo ciclo de vida de um componente, que refere-se às suas\r\n  atualizações. A função beforeUpdate é executada antes de QUALQUER qualquer\r\n  atualização no DOM do componente. E a função afterUpdate é executada depois de\r\n  QUALQUER atualização. Podemos perceber esses comportamentos abrindo o Modal,\r\n  clicando no botão \"Agree\" (a variável booleana reativa é alterada) e depois\r\n  clicando em \"Close\". Lembrando que quando ambas as funções são executadas, a\r\n  ação já ocorreu.\r\n\r\n  Anotação 03\r\n  Os slots são usados para enviar conteúdo para um componente filho de uma\r\n  maneira diferente. Podendo-se enviar outros elementos para serem utilizados e\r\n  renderizados. Nesse exemplo, o nosso Modal é apenas um local para inserirmos\r\n  outros componentes. Podem existir n slots, porém apenas um pode ficar sem um\r\n  nome. Analisando o <footer> é possível perceber o uso de uma estrutura padrão\r\n  caso nenhuma propriedade/componente seja enviado para esse slot. Esse\r\n  conteúdo será substituido pelo conteúdo enviado, caso exista.\r\n -->\r\n","<script>\r\n  // Anotação 01\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let title;\r\n  export let price;\r\n  \r\n  // Propriedade opcional:\r\n  export let bestseller = false;\r\n\r\n  function addToCart() {\r\n    // Anotação 02\r\n    dispatch(\"add-to-cart\", {id: \"p1\"});\r\n  }\r\n</script>\r\n\r\n<article on:dblclick>\r\n  <h1>{title}</h1>\r\n  <h2>R$ {price}</h2>\r\n  {#if bestseller}\r\n    <h3>BESTSELLER</h3>\r\n  {/if}\r\n\r\n  <!-- Anotação 03 -->\r\n  <button on:click={addToCart}>Add to Cart</button>\r\n  <button on:click={() => dispatch(\"delete\", \"p1\")}>Delete</button>\r\n</article>\r\n\r\n<!--\r\n  Anotação 01\r\n  Para criarmos eventos próprios importamos createEventDispatcher.\r\n\r\n  Anotação 02\r\n  Informamos o nome do evento a ser transmitido e, opcionalmente, um parâmetro,\r\n  que pode ser um número, uma string ou um objeto, por exemplo.\r\n\r\n  Anotação 03\r\n  Não atribuir algo ao \"on:click\", da seguinte maneira:\r\n  \"<button on:click>Add to Cart</button>\" significa que não será o próprio\r\n  componente o responsável por lidar com esse evento. O evento será\r\n  encaminhado/propadado. Porém o evento é propagado apenas UM nível acima. Então\r\n  o componente pai pode \"tratar\" o evento ou apenas propagá-lo novamente. Nesse\r\n  caso, não será possível distinguir qual dos botões foi clicado (se ambos\r\n  estiverem com o evento de clique), se usarmos apenas os eventos pré-definidos.\r\n-->\r\n","<script>\r\n  import Modal from \"./Modal.svelte\";\r\n  import Product from \"./Product.svelte\";\r\n  import { tick } from \"svelte\";\r\n\r\n  let text = \"This is some dummy text!\";\r\n\r\n  let products = [\r\n    {\r\n      id: \"p1\",\r\n      title: \"A Book\",\r\n      price: 9.99,\r\n    },\r\n  ];\r\n\r\n  let showModal = false;\r\n\r\n  function addToCart(event) {\r\n    console.log(event.detail);\r\n  }\r\n\r\n  function deleteProduct(event) {\r\n    console.log(event.detail);\r\n  }\r\n\r\n  function transform(event) {\r\n    if (event.keyCode !== 9) {\r\n      // TAB ASCII code: 9\r\n      return;\r\n    }\r\n    event.preventDefault(); // Impede o comportameto padrão \"próximo elemento\"\r\n    const selectionStart = event.target.selectionStart;\r\n    const selectionEnd = event.target.selectionEnd;\r\n    const value = event.target.value;\r\n\r\n    text =\r\n      value.slice(0, selectionStart) +\r\n      value.slice(selectionStart, selectionEnd).toUpperCase() +\r\n      value.slice(selectionEnd);\r\n\r\n    // Anotação 03\r\n    // event.target.selectionStart = selectionStart;\r\n    // event.target.selectionEnd = selectionEnd;\r\n    \r\n    tick().then(() => {\r\n      event.target.selectionStart = selectionStart;\r\n      event.target.selectionEnd = selectionEnd;\r\n    });\r\n  }\r\n</script>\r\n\r\n{#each products as product}\r\n  <Product\r\n    {...product}\r\n    on:dblclick={() => alert(\"Duplo clique!\")}\r\n    on:add-to-cart={addToCart}\r\n    on:delete={deleteProduct}\r\n  />\r\n{/each}\r\n\r\n<br />\r\n<button on:click={() => (showModal = true)}>Show Modal</button>\r\n\r\n{#if showModal}\r\n  <!-- Anotação 02 -->\r\n  <Modal\r\n    on:cancel={() => (showModal = false)}\r\n    on:close={() => (showModal = false)}\r\n    let:didAgree={closeable}\r\n  >\r\n    <!-- Anotação 01 -->\r\n    <h1 slot=\"header\">Hi!</h1>\r\n    <p>This works!</p>\r\n    <p>This works!</p>\r\n    <button\r\n      slot=\"footer\"\r\n      on:click={() => (showModal = false)}\r\n      disabled={!closeable}>Confirm</button\r\n    >\r\n    <p>This works!</p>\r\n  </Modal>\r\n{/if}\r\n\r\n<!-- Anotação 03 -->\r\n<textarea rows=\"5\" value={text} on:keydown={transform} />\r\n\r\n<!--\r\n  Anotação 01\r\n  É possível enviar conteúdo para o Modal em vários locais/slots diferentes no\r\n  mesmo. Todo o conteúdo que sem definição de um nome do slot destino será\r\n  enviado para o slot não nomeado dentro do Modal.\r\n\r\n  Anotação 02\r\n  Aqui no componente pai, podemos verificar o valor de uma variável que pertence\r\n  ao Modal. Em Modal existe uma variável chamada \"agreed\". No slot onde ela\r\n  está, usamos a declaração \"didAgreed={agreed}\". Podemos dizer que \"didAgreed\"\r\n  é quem trará o valor \"agreed\" do filho para o pai, podemos usar o nome que\r\n  quisermos. Aqui, no componente pai, usamos NO COMPONENTE (e não no slot) a\r\n  a declaração \"let:didAgree={closeable}\". Isso quer dizer que estamos usando\r\n  \"closeable\" como um apelido para a variável que está no Modal.\r\n\r\n  Anotação 03\r\n  Simplesmente definir a nova seleção dentro da função, não fará com que\r\n  tenhamos o efeito desejado pois o \"value={text}\" da tag (a atualização do DOM)\r\n  só será executada na próxima micro-transação. Além disso, não é possível\r\n  utilizar afterUpdate() dentro de uma função. Usaremos o tick(). A função tick\r\n  retorna uma promessa que, quando for concluída, a próxima micro-transação será\r\n  executada.\r\n-->\r\n","<script>\r\n  export let componenteValue;\r\n</script>\r\n\r\n<input type=\"text\" bind:value={componenteValue} />\r\n","<script>\r\n  export let chosenOption = 1;\r\n</script>\r\n\r\n<button disabled={chosenOption === 1} on:click={() => (chosenOption = 1)}\r\n  >Option 1</button\r\n>\r\n<button disabled={chosenOption === 2} on:click={() => (chosenOption = 2)}\r\n  >Option 2</button\r\n>\r\n<button disabled={chosenOption === 3} on:click={() => (chosenOption = 3)}\r\n  >Option 3</button\r\n>\r\n","export function isValidEmail(val) {\r\n  return val.includes(\"@\");\r\n}\r\n","<script>\r\n  import CustomInput from \"./CustomInput.svelte\";\r\n  import Toggle from \"./Toggle.svelte\";\r\n  import { isValidEmail } from \"./validation\";\r\n\r\n  let appValue = \"Test\";\r\n  let option = 2;\r\n  let price = 0;\r\n  let agreed = false;\r\n  let checkColor = \"blue\";\r\n  let radioColors = [\"red\", \"green\"];\r\n  let selectColor = \"green\";\r\n  let usernameInput;\r\n  let enteredEmail = \"\";\r\n  let formIsValid;\r\n\r\n  $: console.log(`appValue: ${appValue}`);\r\n  $: console.log(`option: ${option}`);\r\n  $: console.log(`price: ${price}`);\r\n  $: console.log(`agreed: ${agreed}`);\r\n\r\n  $: console.log(`checkColor: ${checkColor}`);\r\n  $: console.log(`radioColors: ${radioColors}`);\r\n  $: console.log(`selectColor: ${selectColor}`);\r\n\r\n  $: if (isValidEmail(enteredEmail)) {\r\n    formIsValid = true;\r\n  } else {\r\n    formIsValid = false;\r\n  }\r\n\r\n  function saveData() {\r\n    //console.log(document.querySelector(\"#username\").value);\r\n    console.log(usernameInput);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .invalid {\r\n    background-color: darkred;\r\n  }\r\n</style>\r\n\r\n<br /><br /><br />\r\n\r\n<!-- Anotação 01 -->\r\n<CustomInput bind:componenteValue={appValue} />\r\n<Toggle bind:chosenOption={option} />\r\n\r\n<!-- Anotação 02 -->\r\n<input type=\"number\" bind:value={price} />\r\n\r\n<label>\r\n  <input type=\"checkbox\" bind:checked={agreed} />\r\n  Agree to terms?\r\n</label>\r\n\r\n<h1>Favorite Color?</h1>\r\n<label>\r\n  <input type=\"radio\" name=\"colors\" value=\"red\" bind:group={checkColor} />\r\n  Red\r\n</label>\r\n<label>\r\n  <input type=\"radio\" name=\"colors\" value=\"green\" bind:group={checkColor} />\r\n  Green\r\n</label>\r\n<label>\r\n  <input type=\"radio\" name=\"colors\" value=\"blue\" bind:group={checkColor} />\r\n  Blue\r\n</label>\r\n\r\n<h1>Favorite Color(s)?</h1>\r\n<label>\r\n  <input type=\"checkbox\" name=\"colors\" value=\"red\" bind:group={radioColors} />\r\n  Red\r\n</label>\r\n<label>\r\n  <input type=\"checkbox\" name=\"colors\" value=\"green\" bind:group={radioColors} />\r\n  Green\r\n</label>\r\n<label>\r\n  <input type=\"checkbox\" name=\"colors\" value=\"blue\" bind:group={radioColors} />\r\n  Blue\r\n</label>\r\n\r\n<h1>Favorite Color?</h1>\r\n<select bind:value={selectColor}>\r\n  <option value=\"red\">Red</option>\r\n  <option value=\"green\">Green</option>\r\n  <option value=\"blue\">Blue</option>\r\n</select>\r\n\r\n<hr />\r\n\r\n<!-- Anotação 03 -->\r\n<!-- <input type=\"text\" id=\"username\" /> -->\r\n<input type=\"text\" bind:this={usernameInput} />\r\n<button on:click={saveData}>Save</button>\r\n\r\n<hr />\r\n\r\n<form on:submit|preventDefault>\r\n  <input\r\n    type=\"email\"\r\n    bind:value={enteredEmail}\r\n    class={isValidEmail(enteredEmail) ? \"\" : \"invalid\"}\r\n  />\r\n  <button type=\"submit\" disabled={!formIsValid}>Save</button>\r\n</form>\r\n\r\n<!--\r\n  Anotação 01\r\n  Demonstração de como é possível vincular variáveis do componente pai com as\r\n  variáveis expostas do componente filho. Essa técnica é desencorajada pois, com\r\n  ela, o desenvolvedor pode facilmente introduzir bugs. Portanto, use-a com\r\n  cautela!\r\n\r\n  Anotação 02\r\n  <input type=\"number\" value={price}\r\n  on:input={(event) => console.log(event.target.value)} />\r\n  Mesmo usando o type=\"number\", o JS recebe isso como uma string, sempre como\r\n  string. Nesse caso, number serve apenas para modificar o campo, acrescentando\r\n  um controlador de incremendo e decremento. Usando o bind, o Svelte tentará\r\n  converter automaticamente o campo, é possível verificar isso quando apagamos\r\n  todos os números do input e, no console, aparece a mensagem \"null\" e não \"\".\r\n\r\n  Anotação 03\r\n  O bind:this cria um PONTEIRO para determinado elemento. É possível acessar\r\n  todas as propriedades, como no JS, usando ponteiro.value para acessar o valor,\r\n  por exemplo.\r\n-->\r\n","<script>\n  export let mode = null;\n</script>\n\n<style>\n  button {\n    font: inherit;\n    border: 1px solid #cf0056;\n    background: #cf0056;\n    padding: 0.5rem 1rem;\n    color: white;\n    border-radius: 5px;\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.26);\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  button:focus {\n    outline: none;\n  }\n\n  button:hover,\n  button:active {\n    background: #e40763;\n    border-color: #e40763;\n    box-shadow: 1px 1px 8px rgba(77, 51, 51, 0.26);\n  }\n\n  button:disabled,\n  button:disabled:hover,\n  button:disabled:active {\n    background: #ccc;\n    border-color: #ccc;\n    color: #959595;\n    box-shadow: none;\n    cursor: not-allowed;\n  }\n\n  .outline {\n    background: transparent;\n    color: #cf0056;\n    box-shadow: none;\n  }\n\n  .outline:hover,\n  .outline:active {\n    background: #ffc7de;\n    box-shadow: none;\n  }\n\n  .outline:disabled,\n  .outline:disabled:hover,\n  .outline:disabled:active {\n    background: transparent;\n    color: #ccc;\n  }\n</style>\n\n<button class={mode} type=\"button\" on:click>\n  <slot />\n</button>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nconst cart = writable([\r\n  {\r\n    id: \"p3\",\r\n    title: \"Test\",\r\n    price: 9.99,\r\n  },\r\n  {\r\n    id: \"p4\",\r\n    title: \"Test\",\r\n    price: 9.99,\r\n  },\r\n]);\r\n\r\nconst customCart = {\r\n  subscribe: cart.subscribe,\r\n\r\n  addItem: (item) => {\r\n    cart.update((items) => {\r\n      if (items.find((i) => i.id === item.id)) {\r\n        return [...items];\r\n      }\r\n      return [...items, item];\r\n    });\r\n  },\r\n\r\n  removeItem: (id) => {\r\n    cart.update((items) => {\r\n      return items.filter((i) => i.id !== id);\r\n    });\r\n  },\r\n};\r\n\r\nexport default customCart;\r\n","import { writable } from \"svelte/store\";\r\n\r\nconst products = writable([\r\n  {\r\n    id: \"p1\",\r\n    title: \"A Book\",\r\n    price: 9.99,\r\n    description: \"A great book!\",\r\n  },\r\n  {\r\n    id: \"p2\",\r\n    title: \"A Carpet\",\r\n    price: 99.99,\r\n    description: \"Red and green.\",\r\n  },\r\n]);\r\n\r\nexport default products;\r\n","<script>\r\n  import Button from \"../UI/Button.svelte\";\r\n  import cartItems from \"../Cart/cart-store\";\r\n  import products from \"../Products/product-store\";\r\n\r\n  export let title;\r\n  export let price;\r\n  export let id;\r\n\r\n  let showDescription = false;\r\n  let description = \"Not available!\";\r\n\r\n  function displayDescription() {\r\n    showDescription = !showDescription;\r\n    // Anotação 01\r\n    const unsubscribe = products.subscribe((prods) => {\r\n      const prod = prods.find((p) => p.id === id);\r\n      if (typeof prod !== \"undefined\" && prod.hasOwnProperty(\"description\")) {\r\n        description = prod.description;\r\n      }\r\n    });\r\n    unsubscribe();\r\n  }\r\n\r\n  function removeFromCart() {\r\n    cartItems.removeItem(id);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  li {\r\n    margin: 1rem 0;\r\n    border-radius: 5px;\r\n    background: white;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    padding: 1rem;\r\n  }\r\n\r\n  h1,\r\n  h2 {\r\n    font-size: 1rem;\r\n    margin: 0;\r\n  }\r\n\r\n  h2 {\r\n    color: #494949;\r\n    margin-bottom: 1rem;\r\n  }\r\n</style>\r\n\r\n<li>\r\n  <h1>{title}</h1>\r\n  <h2>{price}</h2>\r\n  <Button mode=\"outline\" on:click={displayDescription}>\r\n    {showDescription ? \"Hide Description\" : \"Show Description\"}\r\n  </Button>\r\n  <Button on:click={removeFromCart}>Remove from Cart</Button>\r\n  {#if showDescription}\r\n    <p>{description}</p>\r\n  {/if}\r\n</li>\r\n\r\n<!--\r\n  Anotação 01\r\n  Demonstração do uso de subscribe e unsubscribe temporários de uma loja para\r\n  usar os dados extraídos apenas uma vez.\r\n-->\r\n","<script>\n  import CartItem from \"./CartItem.svelte\";\n  import cartItems from \"../Cart/cart-store\";\n  \n  /* Anotação 01\n  import { onDestroy } from \"svelte\";\n  let items;\n  const unsubscribe = cartItems.subscribe((store) => (items = store));\n\n  onDestroy(() => {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n  }); */\n</script>\n\n<style>\n  section {\n    width: 30rem;\n    max-width: 90%;\n    margin: 2rem auto;\n    border-bottom: 2px solid #ccc;\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n\n<section>\n  <h1>Cart</h1>\n  <ul>\n    <!-- Anotação 02 -->\n    {#each $cartItems as item (item.id)}\n      <CartItem id={item.id} title={item.title} price={item.price} />\n    {:else}\n      <p>No items in cart yet!</p>\n    {/each}\n  </ul>\n</section>\n\n<!--\n  Anotação 01\n  A função subscribe é executada sempre que ocorre uma alteração nos dados da\n  store. Em nosso exemplo, existe um botão que permite ocultar e mostrar os\n  itens em nosso carrinho. Como a função subscribe está dentro do carrinho,\n  sempre que ele é mostrado, é criada uma nova função subscribe, o que poderá\n  sobrecarregar a aplicação a longo prazo pois, quando o carrinho é mostrado,\n  todas as funções subscribe dele serão executadas. Para que isso nao ocorra,\n  devemos limpar as assinaturas tão logo o componente deixe de existir. Para\n  isso, utilizamos o retorno da própria função subscribe, cujo qual é uma função\n  que usaremos para o nosso propósito dentro do onDestroy (quando o componente é\n  destruído do DOM). A função pode ter qualquer nome, mas sempre prefira um\n  sugestivo. A condição de existência dentro de onDestroy é um bom hábito apenas\n  para evitar eventuais erros, já que a função unsubscribe provavelmente\n  existirá.\n\n  Anotação 02\n  Quando precisamos apenas receber os dados de uma store e exibí-los na tela,\n  temos um atalho providenciado pelo Svelte. É possível usar diretamente\n  \"$nome-da-store\" para que todo o trabalho de subscribe, extração e uso dos\n  dados e unsubscribe seja feito automaticamente. Porém, é importante saber os\n  conceitos pois, em muitos casos, precisamos tratar os dados antes de exibí-los\n  na tela. Portanto, as variáveis que começam com um cifrão são sempre\n  entendidas como stores pelo Svelte.\n-->\n","<script>\n  import Button from \"../UI/Button.svelte\";\n  import cartItems from \"../Cart/cart-store.js\";\n\n  export let id;\n  export let title;\n  export let price;\n  export let description;\n\n  function addToCart() {\n    cartItems.addItem({id, title, price});\n  }\n</script>\n\n<style>\n  .product {\n    background: white;\n    border-radius: 5px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 1rem 0;\n  }\n\n  h1 {\n    font-size: 1.25rem;\n    font-family: \"Roboto Slab\", serif;\n    margin: 0;\n  }\n\n  h2 {\n    font-size: 1rem;\n    margin: 0;\n    color: #494949;\n  }\n\n  p {\n    margin: 0;\n  }\n</style>\n\n<div class=\"product\">\n  <div>\n    <h1>{title}</h1>\n    <h2>{price}</h2>\n    <p>{description}</p>\n  </div>\n  <div>\n    <Button on:click={addToCart}>Add to Cart</Button>\n  </div>\n</div>\n","<script>\n  import Product from \"../Products/Product.svelte\";\n  import products from \"../Products/product-store\"\n</script>\n\n<style>\n  section {\n    width: 30rem;\n    max-width: 90%;\n    margin: 2rem auto;\n  }\n</style>\n\n<section>\n  <h1>Products</h1>\n  {#each $products as product (product.id)}\n    <Product\n      id={product.id}\n      title={product.title}\n      price={product.price}\n      description={product.description} />\n  {/each}\n</section>\n","import { readable } from \"svelte/store\";\r\n\r\nlet count = 0;\r\n\r\nconst timer = readable(count, (setFunctionName) => {\r\n  const myFunction = setInterval(() => {\r\n    count++;\r\n    setFunctionName(count);\r\n  }, 1000);\r\n\r\n  return () => {\r\n    clearInterval(myFunction);\r\n  };\r\n});\r\n\r\nexport default timer;\r\n\r\n/* Readable é outro tipo de store, a qual não é possível alterar seus dados\r\n   externamente, logo, não é possível usar as funções set e update, somente a\r\n   função subscribe. Seu primeiro parâmetro é o valor inicial da store e o\r\n   segundo é uma função. Nessa função, definimos um nome qualquer para o\r\n   parâmetro. Esse parâmetro, na verdade é um nome para uma outra função que\r\n   usaremos dentro do readable para indicar quando queremos definir um nome\r\n   valor para a store. Por exemplo: usamos a função setInterval que é executada\r\n   no intervalo de tempo especificado, no caso 1000 milissegundos - 1 segundo,\r\n   para executar a função setFunctionName (responsável por atualizar o valor da\r\n    store). Essa função parâmetro do readable deve ter um retorno. E esse\r\n    retorno não poderia ser nada além de OUTRA função! Essa nova função serve de\r\n    limpeza e o Svelte a executa sempre que a store não é mais necessária.\r\n*/\r\n","<script>\n  import Cart from \"./Cart/Cart.svelte\";\n  import Products from \"./Products/Products.svelte\";\n  import Button from \"./UI/Button.svelte\";\n  import timer from \"./UI/timer\";\n\n  let showCart = true;\n</script>\n\n<Button on:click={() => (showCart = !showCart)}>Toggle Cart</Button>\n{#if showCart}\n  <Cart />\n{/if}\n<Products />\n\n<p>Counter: {$timer}</p>","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, animation, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const scaleX = animation.from.width / node.clientWidth;\n    const scaleY = animation.from.height / node.clientHeight;\n    const dx = (animation.from.left - animation.to.left) / scaleX;\n    const dy = (animation.from.top - animation.to.top) / scaleY;\n    const d = Math.sqrt(dx * dx + dy * dy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(d) : duration,\n        easing,\n        css: (_t, u) => `transform: ${transform} translate(${u * dx}px, ${u * dy}px);`\n    };\n}\n\nexport { flip };\n","<script>\r\n  import { spring } from \"svelte/motion\";\r\n  import { writable } from \"svelte/store\";\r\n\r\n  let cards = writable([\r\n    {\r\n      id: \"c1\",\r\n      color: \"red\",\r\n    },\r\n    {\r\n      id: \"c2\",\r\n      color: \"blue\",\r\n    },\r\n    {\r\n      id: \"c3\",\r\n      color: \"green\",\r\n    },\r\n    {\r\n      id: \"c4\",\r\n      color: \"orange\",\r\n    },\r\n  ]);\r\n  let cardPos = spring(\r\n    [\r\n      {\r\n        rotation: 0,\r\n        dx: 0,\r\n      },\r\n      {\r\n        rotation: -10,\r\n        dx: 0,\r\n      },\r\n      {\r\n        rotation: 19,\r\n        dx: 0,\r\n      },\r\n      {\r\n        rotation: -25,\r\n        dx: 0,\r\n      },\r\n    ],\r\n    {\r\n      stiffness: 0.05,\r\n      damping: 0.9,\r\n      precision: 0.001\r\n    }\r\n  );\r\n\r\n  function discard(index) {\r\n    cardPos.update((items) => {\r\n      const updatedCardPositions = [...items];\r\n      const updatedCardPos = { ...updatedCardPositions[index] };\r\n      updatedCardPos.dx = 1200;\r\n      updatedCardPos.rotation = 60;\r\n      updatedCardPositions[index] = updatedCardPos;\r\n      return updatedCardPositions;\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .page {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  .card {\r\n    position: absolute;\r\n    width: 20rem;\r\n    height: 30rem;\r\n    background: #ccc;\r\n    left: calc(50% - 10rem);\r\n    top: calc(50vh - 15rem);\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n\r\n<div class=\"page\">\r\n  <div class=\"cards\">\r\n    {#each $cards as card, i (card.id)}\r\n      <div\r\n        class=\"card\"\r\n        style=\"background: {card.color}; transform: rotateZ({$cardPos[i]\r\n          .rotation}deg) translateX({$cardPos[i].dx}px)\"\r\n        on:click={discard.bind(this, i)}\r\n      />\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<!--\r\n  Esse componente possui duas writable store. As contém informações sobre alguns\r\n  cards que são renderizados na tela. Os dados foram separados dessa forma para\r\n  que a segunda store seja composta por objetos que só possuem números, com isso\r\n  conseguiremos adicionar animações com tweened. Porém usaremos a spring, outra\r\n  store, semelhante à tweened, porém que não é linear, pois leva em consideração\r\n  a física (spring, além de primavera, é mola em inglês). Seu segundo parâmetro\r\n  é um objeto de configuração com algumas propriedades:\r\n  - stiffness: rigidez - valor entre 0 e 1, quanto maior o valor, mais apertada\r\n    ficará a mola.\r\n  - damping: amortecimento - valor entre 0 e 1, quanto menor o valor, mais\r\n    elástica ficará a mola.\r\n  - precision: precisão - limite no qual a mola é considerada em repouso. Quanto\r\n    menor o valor, mais preciso será.\r\n-->\r\n","<script>\r\n  import { tweened } from \"svelte/motion\";\r\n  import { cubicIn } from \"svelte/easing\";\r\n  import { fade, fly, slide, scale } from \"svelte/transition\";\r\n  import { flip } from \"svelte/animate\";\r\n  import Spring from \"./Spring.svelte\";\r\n\r\n  let boxes = [];\r\n  let boxInput;\r\n  let show = false;\r\n\r\n  // Anotação 01\r\n  const progress = tweened(0, {\r\n    delay: 0,\r\n    duration: 1500,\r\n    easing: cubicIn,\r\n  });\r\n\r\n  setTimeout(() => {\r\n    progress.set(0.5);\r\n  }, 1500);\r\n\r\n  function addBox() {\r\n    if (boxInput && !boxes.find((b) => b === boxInput))\r\n      boxes = [...boxes, boxInput];\r\n  }\r\n\r\n  function discard(box) {\r\n    boxes = boxes.filter((m) => m !== box);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    width: 10rem;\r\n    height: 10rem;\r\n    background: #ccc;\r\n    margin: 1rem;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n  }\r\n\r\n  progress {\r\n    display: block;\r\n    margin-bottom: 5rem;\r\n  }\r\n\r\n  input {\r\n    margin-top: 5rem;\r\n  }\r\n</style>\r\n\r\n<progress value={$progress} />\r\n\r\n<button on:click={() => (show = !show)}>Toggle</button>\r\n{#if show}\r\n  <p transition:slide>Now you see me</p>\r\n{/if}\r\n\r\n<input type=\"text\" bind:value={boxInput} />\r\n<button on:click={addBox}>Add</button>\r\n{#if show}\r\n  <!-- Anotação 02 -->\r\n  {#each boxes as box (box)}\r\n    <div\r\n      in:fly|local={{ x: -200, duration: 2000 }}\r\n      out:fade\r\n      on:click={discard(box)}\r\n      on:introstart={() => console.log(\"Adding the element starts...\")}\r\n      on:introend={() => console.log(\"Adding the element ends...\")}\r\n      on:outrostart={() => console.log(\"Removing the element starts...\")}\r\n      on:outroend={() => console.log(\"Removing the element ends...\")}\r\n      animate:flip\r\n    >\r\n      {box}\r\n    </div>\r\n  {/each}\r\n{/if}\r\n\r\n<Spring />\r\n<!--\r\n  Anotação 01\r\n  Tweened é um tipo de writable store que também faz animações quando os dados\r\n  são alterados. Esses dados podem ser números, datas e matrizes/objetos com\r\n  números ou datas. O primeiro parâmetro é o valor da store, como em uma\r\n  writable comum, nesse exemplo usamos o número 0 para representar 0% em uma\r\n  barra de progresso, o valor 1 significará 100%. O segundo parâmetro é um\r\n  objeto de configuração da tweened:\r\n  - delay: espera antes de executar a animação, em milissegundos (padrão: 0)\r\n  - duration: duração da animação, em milissegundos (padrão: 400)\r\n  - easing: é a função de animação, que pode ser definida através de outras\r\n    funções disponibilizadas pelo Svelte. É possível acessar os protótipos em:\r\n    node_modules > svelte > types > runtime > easing > index.ts. A função\r\n    CubicIn faz com que o final da animação seja mais rápido que o começo.\r\n\r\n  Anotação 02\r\n  Motion é basicamente a animação de valores, enquanto que Transitions são\r\n  animações de aparecimento e desaparecimento. Basta adicionar, à tag HTML, o\r\n  nome da transition. Algumas transições permitem parâmetros e outras precisam\r\n  deles para funcionar corretamente. Elas devem ser enviadas através de um\r\n  objeto de configuração comum do Javascript:\r\n  - fade: permite delay e duration;\r\n  - slide: permite delay, duration e easing;\r\n  - scale: permite delay, duration, easing, start e opacity;\r\n  - fly: permite delay, duration, easing, opacity, x e y.\r\n  \r\n  O modificador \"local\" permite restringir a transição apenas para o elemento\r\n  que está sendo adicionado e não para toda a lista, no exemplo.\r\n\r\n  Também é possível executar ações no início e término do aparecimento e\r\n  desaparecimento do elemento através dos eventos: introstart, introend,\r\n  outrostart e outroend.\r\n\r\n  Usando transition:nome_transicao é aplicado o mesmo efeito para entrada e\r\n  saída do elemento na tela. Mas podemos definir transições diferentes usando\r\n  \"in:\" e \"out:\" seguidos do nome da transição.\r\n\r\n  Para adicionar animação passiva, isso é, de elementos afetados por outros, por\r\n  exemplo, quando um elemento é excluído, como os outros items da lista se\r\n  comportam, usamos o flip (First, Last, Invert, Play) na propriedade \"animate\".\r\n-->\r\n","import { writable } from \"svelte/store\";\r\n\r\nconst hobbies = writable([]);\r\n\r\nconst store = {\r\n  subscribe: hobbies.subscribe,\r\n\r\n  addHobby: (hobby) => {\r\n    hobbies.update((items) => [hobby, ...items]);\r\n  },\r\n\r\n  setHobbies: (items) => hobbies.set(items),\r\n};\r\n\r\nexport default store;\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import hobbyStore from \"./store\";\r\n\r\n  let hobbyInput;\r\n  let isLoading = false;\r\n\r\n  onMount(() => {\r\n    isLoading = true;\r\n    fetch(\"https://meetus-3fe2d-default-rtdb.firebaseio.com/hobbies.json\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw \"An error occurred! Please try again.\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        hobbyStore.setHobbies(Object.values(data).reverse());\r\n      })\r\n      .catch((err) => alert(err))\r\n      .finally(() => {\r\n        isLoading = false;\r\n        hobbyInput.focus();\r\n      });\r\n  });\r\n\r\n  function addHobby() {\r\n    if (\r\n      hobbyInput.value.trim().length > 0 &&\r\n      !$hobbyStore.find((h) => h === hobbyInput.value)\r\n    ) {\r\n      isLoading = true;\r\n      hobbyInput.value = hobbyInput.value.substring(0, 60);\r\n\r\n      // Anotação 01\r\n      fetch(\"https://meetus-3fe2d-default-rtdb.firebaseio.com/hobbies.json\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(hobbyInput.value),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw \"An error occurred! Please try again.\";\r\n          }\r\n          hobbyStore.addHobby(hobbyInput.value);\r\n          hobbyInput.value = \"\";\r\n        })\r\n        .catch((err) => alert(err))\r\n        .finally(() => {\r\n          isLoading = false;\r\n          hobbyInput.focus();\r\n        });\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  ul {\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n  }\r\n\r\n  li {\r\n    margin: 1rem;\r\n    text-align: center;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  #warning {\r\n    text-align: center;\r\n  }\r\n\r\n  .but {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  button {\r\n    margin: 0.5rem auto;\r\n  }\r\n</style>\r\n\r\n<p id=\"warning\">\r\n  ⚠️ Data from this page is dynamically entered by users. The author of this\r\n  project assumes no responsibility for this content. ⚠️\r\n</p>\r\n<br />\r\n\r\n<label for=\"hobby\">Enter an item:</label>\r\n<input type=\"text\" id=\"hobby\" maxlength=\"60\" bind:this={hobbyInput} />\r\n<div class=\"but\">\r\n  <button on:click={addHobby}>Add</button>\r\n</div>\r\n\r\n{#if isLoading}\r\n  <p>Loading...</p>\r\n{:else}\r\n  <ul>\r\n    {#each $hobbyStore as hobby (hobby)}\r\n      <li>{hobby}</li>\r\n    {/each}\r\n  </ul>\r\n{/if}\r\n\r\n<!--\r\n  Anotação 01\r\n  Usamos a função fetch() que é provida pelo próprio JavaScript, passando como\r\n  parâmetro a URL da API, nesse caso usamos o FireBase (consulte o arquivo\r\n  src/HTTP/Instrucoes.md). Foi necessário colocar \".json\" no final da URL, porém\r\n  apenas porque estamos usando o FireBase, e esse é um requisito dele. O segundo\r\n  argumento é um objeto de configuração de requisição. O FireBase, como a\r\n  maioria das API's, espera receber o corpo da requisição como um Json, então\r\n  convertemos os nossos dados com o auxílio da função JSON.stringify() do JS. O\r\n  header serve para que o FireBase entenda que estamos enviando dados em Json.\r\n\r\n  Como o fetch() pode demorar um pouco para fazer requisições, usamos o then()\r\n  para executar ações DEPOIS que a primeira tenha terminado, e catch() para\r\n  capturar eventuais erros que lancemos em then().\r\n\r\n  O then() recebe uma resposta http. Podemos verificar se a requisição foi bem\r\n  sucedida usando resposta.ok (valor = 200) .\r\n-->\r\n","<script>\r\n  export let title;\r\n  export let id;\r\n  export let price;\r\n</script>\r\n\r\n<h1>Id: {id}</h1>\r\n<h1>Name: {title}</h1>\r\n<h1>Price: $ {price}</h1>\r\n<button>Add to Cart</button>\r\n","<script>\r\n  export let title;\r\n  export let id;\r\n  export let amount;\r\n</script>\r\n\r\n<h1>Id: {id}</h1>\r\n<h1>Name: {title}</h1>\r\n<h1>Amount: {amount}</h1>\r\n<button>Add to Cart</button>\r\n","<script>\r\n  export let member;\r\n</script>\r\n\r\n<style>\r\n  div {margin-left: 2rem;}\r\n</style>\r\n\r\n<div>\r\n  <h1>{member.name}</h1>\r\n  {#if member.isParent}\r\n    {#each member.children as child}\r\n      <svelte:self member={child} />\r\n    {/each}\r\n  {/if}\r\n</div>\r\n\r\n<!--\r\n  A tag svelte:self serve para renderizarmos um componente a partir dele mesmo.\r\n  Muito útil em estruturas hierárquicas como árvore de pastas, por exemplo, ou\r\n  um tipo de estrutura cujo o componente tenha dependência de si mesmo.\r\n-->","<script>\r\n  import Product from \"./DynamicComponent/Product.svelte\";\r\n  import CartItem from \"./DynamicComponent/CartItem.svelte\";\r\n  import FamilyNode from \"./RecursiveComponent/FamilyNode.svelte\";\r\n\r\n  let list = [\r\n    { component: Product, data: { id: \"p1\", title: \"Product\", price: 13.18 } },\r\n    { component: CartItem, data: { id: \"c1\", title: \"Cart Item\", amount: 28 } },\r\n  ];\r\n  let selected = 0;\r\n\r\n  function toggle() {\r\n    selected = selected ? 0 : 1;\r\n  }\r\n\r\n  /********************/\r\n\r\n  let familyStructure = [\r\n    {\r\n      name: \"John\",\r\n      isParent: true,\r\n      children: [\r\n        {\r\n          name: \"Moe\",\r\n          isParent: true,\r\n          children: [{ name: \"Julie\", isParent: false }],\r\n        },\r\n      ],\r\n    },\r\n    { name: \"Anna\", isParent: false },\r\n  ];\r\n</script>\r\n\r\n<style>\r\n  hr {\r\n    margin: 3rem 0;\r\n  }\r\n</style>\r\n\r\n<!-- Anotação 01 -->\r\n<button on:click={toggle}>Toggle Display</button>\r\n<svelte:component this={list[selected].component} {...list[selected].data} />\r\n\r\n<hr />\r\n\r\n{#each familyStructure as familyMember}\r\n  <FamilyNode member={familyMember} />\r\n{/each}\r\n\r\n<!--\r\n  Anotação 01\r\n  A tag svelte:component permite criar componentes informando o nome do\r\n  construtor do componente através do this={} e passando os o valores das\r\n  propriedades normalmente como já fizemos. Nesse caso, criamos objetos com o\r\n  nome dos componentes e suas propriedades, fazendo com que não seja necessário\r\n  criar uma declaração #if para renderizar diferentes tipos de componentes.\r\n-->\r\n","<script>\r\n  import Basic from \"./Basic/Basic.svelte\";\r\n  import ComponentEvents from \"./ComponentEvents/ComponentEvents.svelte\";\r\n  import BindingsAndForms from \"./BindingsAndForms/BindingsAndForms.svelte\";\r\n  import DataStore from \"./DataStore/DataStore.svelte\";\r\n  import Animations from \"./Animations/Animations.svelte\";\r\n  import Http from \"./HTTP/Http.svelte\";\r\n  import SpecialElements from \"./SpecialElements/SpecialElements.svelte\";\r\n\r\n  let option = 7;\r\n</script>\r\n\r\n<style>\r\n  hr {\r\n    margin: 3rem 0;\r\n  }\r\n</style>\r\n\r\n<p>\r\n  Select the module:\r\n  <select bind:value={option}>\r\n    <option value={1}>Basic</option>\r\n    <option value={2}>Component Events</option>\r\n    <option value={3}>Binding and Forms</option>\r\n    <option value={4}>Data Store</option>\r\n    <option value={5}>Transitions, Motions and Animations</option>\r\n    <option value={6}>Network Interaction via HTTP</option>\r\n    <option value={7}>Special Elements</option>\r\n  </select>\r\n</p>\r\n<hr />\r\n\r\n{#if option === 1}\r\n  <Basic />\r\n{:else if option === 2}\r\n  <ComponentEvents />\r\n{:else if option === 3}\r\n  <BindingsAndForms />\r\n{:else if option === 4}\r\n  <DataStore />\r\n{:else if option === 5}\r\n  <Animations />\r\n{:else if option === 6}\r\n  <Http />\r\n{:else if option === 7}\r\n  <SpecialElements />\r\n{/if}\r\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","get_binding_group_value","group","__value","checked","Array","from","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","add_transform","getBoundingClientRect","left","top","getComputedStyle","transform","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","update","pop","has","fragment","before_update","after_update","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","go","easing","tick","css","destroy_block","lookup","outro_and_destroy_block","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","bind","index","props","bound","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","instance","create_fragment","not_equal","parent_component","on_disconnect","context","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","childNodes","children","l","SvelteComponent","$destroy","splice","$$props","obj","$$set","keys","userName","jobTitle","description","userImage","desc","imageURL","id","title","image","formState","createdContacts","trim","random","agreed","autoscroll","console","log","beforeUpdate","afterUpdate","modal","scrollTo","scrollHeight","price","bestseller","addToCart","deleteProduct","closeable","showModal","keyCode","selectionStart","selectionEnd","toUpperCase","alert","componenteValue","chosenOption","isValidEmail","val","includes","usernameInput","formIsValid","appValue","checkColor","radioColors","selectColor","enteredEmail","mode","subscriber_queue","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","cart","customCart","addItem","item","items","find","removeItem","products","showDescription","prods","prod","hasOwnProperty","cartItems","count","timer","setFunctionName","myFunction","setInterval","clearInterval","showCart","cubicIn","cubicOut","is_date","prototype","toString","tick_spring","last_value","current_value","target_value","delta","velocity","dt","opts","stiffness","damping","inv_mass","precision","settled","getTime","isArray","_","next_value","spring","last_time","current_token","inv_mass_recovery_rate","cancel_task","token","hard","soft","rate","min","fulfil","get_interpolator","arr","bi","interpolators","result","fade","linear","opacity","fly","y","target_opacity","od","u","slide","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","flip","scaleX","width","clientWidth","scaleY","clientHeight","dx","to","dy","sqrt","_t","color","rotation","cards","cardPos","updatedCardPositions","updatedCardPos","position","right","bottom","start_time","running","started","cleanup","end_time","abort","reset","boxInput","boxes","show","progress","defaults","previous_task","interpolate","elapsed","tweened","setTimeout","box","hobbies","addHobby","hobby","setHobbies","hobbyInput","isLoading","fetch","res","ok","json","hobbyStore","values","reverse","catch","err","finally","focus","$hobbyStore","h","substring","method","body","JSON","stringify","headers","Content-Type","amount","isParent","member","Product","CartItem"],"mappings":"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"}